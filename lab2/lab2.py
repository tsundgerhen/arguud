import random

class ProductionRule:
    def __init__(self, head, body):
        self.head = head
        self.body = body

class CFG:
    def __init__(self):
        self.rules = []
        self.terminals = []
        self.startSymbol = None

def initialize_CFG(grammar):
    grammar.rules = [
        ProductionRule('S', ["aSa", "bSb", "cSc", "dSd", "a", "b", "c", "d"]),
        ProductionRule('V', ["aSa", "bSb", "cSc", "dSd", "a", "b", "c", "d"])
    ]
    grammar.terminals = ["a", "b", "c", "d"]
    grammar.startSymbol = 'S'

def generatePalindrome(grammar, symbol):
    if symbol in grammar.terminals:
        return symbol
    else:
        rule = random.choice([r for r in grammar.rules if r.head == symbol])
        randomProduction = random.choice(rule.body)
        generatedString = ""
        for char in randomProduction:
            generatedString += generatePalindrome(grammar, char)
        return generatedString

def parseString(grammar, string, symbol):
    if len(string) == 0:
        return True
    if symbol in grammar.terminals:
        return string[0] == symbol and parseString(grammar, string[1:], symbol)
    else:
        rule = next((r for r in grammar.rules if r.head == symbol), None)
        if rule:
            for production in rule.body:
                if len(production) <= len(string):
                    if string.startswith(production) and string.endswith(production):
                        return parseString(grammar, string[len(production):-len(production)], symbol)
    return False

def testParser(grammar, numTests):
    print("Testing Parser with Random Palindromes:")
    for i in range(numTests):
        testPalindrome = generatePalindrome(grammar, grammar.startSymbol)
        print("Test", i+1, ": Palindrome =", testPalindrome)
        if parseString(grammar, testPalindrome, grammar.startSymbol):
            print("Parser Result: Valid\n")
        else:
            print("Parser Result: Invalid\n")

def main():
    grammar = CFG()
    initialize_CFG(grammar)

    # Generate and print a random palindrome string
    randomPalindrome = generatePalindrome(grammar, grammar.startSymbol)
    print("Random Palindrome:", randomPalindrome)

    # Test the parser with random palindromes
    testParser(grammar, 5)

    # Test the parser with user input
    userInput = input("Enter a string to test if it's a palindrome: ")
    if parseString(grammar, userInput, grammar.startSymbol):
        print("The string is generated by the CFG.")
    else:
        print("The string is not generated by the CFG.")

if __name__ == "__main__":
    main()